{"id":"como-mantener-los-componentes-puros-y-que-ventajas-tiene","level":1,"title":"¿Cómo mantener los componentes puros y qué ventajas tiene?","content":"<p>Los componentes puros son aquellos que no tienen estado y que no tienen efectos secundarios. Esto quiere decir que no tienen ningún tipo de lógica que no sea la de renderizar la interfaz.</p>\n<p>Son más fáciles de testear y de mantener. Además, son más fáciles de entender porque no tienen lógica compleja.</p>\n<p>Para crear un componente puro en React usamos una function:</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">Button</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> text <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\n<p>En este caso, el componente <code>Button</code> recibe una prop <code>text</code> que es un string. El componente <code>Button</code> renderiza un botón con el texto que recibe en la prop <code>text</code>.</p>\n<hr>\n"}
