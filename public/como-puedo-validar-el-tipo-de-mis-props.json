{"id":"como-puedo-validar-el-tipo-de-mis-props","level":1,"title":"¿Cómo puedo validar el tipo de mis props?","content":"<p>React proporciona una forma de validar el tipo de las props de un componente en tiempo de ejecución y en modo desarrollo. Esto es útil para asegurarnos de que los componentes se están utilizando correctamente.</p>\n<p>El paquete se llama <code>prop-types</code> y se puede instalar con <code>npm install prop-types</code>.</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">\"prop-types\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\nApp<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre>\n\n<p>En este ejemplo, estamos validando que la prop <code>title</code> sea de tipo <code>string</code> y que sea obligatoria.</p>\n<p>Existen una colección de <em>PropTypes</em> ya definidas para ayudarte a comprobar los tipos de las props más comunes:</p>\n<pre><code class=\"language-js\">PropTypes<span class=\"token punctuation\">.</span>number <span class=\"token comment\">// número</span>\nPropTypes<span class=\"token punctuation\">.</span>string <span class=\"token comment\">// string</span>\nPropTypes<span class=\"token punctuation\">.</span>array <span class=\"token comment\">// array</span>\nPropTypes<span class=\"token punctuation\">.</span>object <span class=\"token comment\">// objeto</span>\nPropTypes<span class=\"token punctuation\">.</span>bool <span class=\"token comment\">// un booleano</span>\nPropTypes<span class=\"token punctuation\">.</span>func <span class=\"token comment\">// función</span>\nPropTypes<span class=\"token punctuation\">.</span>node <span class=\"token comment\">// cualquier cosa renderizable en React, como un número, string, elemento, array, etc.</span>\nPropTypes<span class=\"token punctuation\">.</span>element <span class=\"token comment\">// un elemento React</span>\nPropTypes<span class=\"token punctuation\">.</span>symbol <span class=\"token comment\">// un Symbol de JavaScript</span>\nPropTypes<span class=\"token punctuation\">.</span>any <span class=\"token comment\">// cualquier tipo de dato</span></code></pre>\n\n<p>A todas estas se le puede añadir la propiedad <code>isRequired</code> para indicar que es obligatoria.</p>\n<blockquote>\n<p>Otra opción es usar TypeScript, un lenguaje de programación que compila a JavaScript y que ofrece validación de tipos de forma estática. Ten en cuenta que mientras que TypeScript comprueba los tipos en tiempo de compilación, las PropTypes lo hacen en tiempo de ejecución.</p>\n</blockquote>\n<hr>\n"}
