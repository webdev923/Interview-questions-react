{"id":"que-es-el-binding","title":"¿Qué es el Binding?","content":"<p>En React, el <strong>Binding</strong> se refiere a la forma en que se relaciona y sincroniza el <strong>estado</strong> <em>(state)</em> de un componente con su <strong>vista</strong> <em>(render)</em>. El estado de un componente es un objeto que contiene información que puede ser utilizada para determinar cómo se debe mostrar el componente. Existen <strong>dos</strong> tipos de binding en React: <strong>One-Way Binding</strong> y <strong>Two-Way Binding</strong>.</p>\n<p><strong>One-Way Binding</strong> <em>(Enlace unidireccional)</em>:</p>\n<p>En React se refiere a la capacidad de un componente para actualizar su <strong>estado</strong> <em>(state)</em> y su <strong>vista</strong> <em>(render)</em> de manera automática cuando cambia el estado, pero no permitiendo que la vista actualice el estado. En otras palabras, el <strong>one-way binding</strong> significa que el flujo de datos es unidireccional, desde el estado hacia la vista, y no al revés.</p>\n<p>Por ejemplo:</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">OneWayBindingExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'midu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Enter your name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> OneWayBindingExample<span class=\"token punctuation\">;</span></code></pre>\n\n<p>*En este ejemplo, el componente tiene un estado inicial llamado <strong>name</strong> con el valor <strong>midu</strong>. La función <strong>setName</strong> se utiliza para actualizar el estado <strong>name</strong> cuando se produce un evento <strong>onChange</strong> en el input. Sin embargo, la <strong>vista</strong> (la linea que muestra <strong>Hello, {name}</strong>) no tiene la capacidad de actualizar el estado <strong>name</strong>.*</p>\n<p><strong>Two-Way Binding</strong> <em>(Enlace bidireccional)</em>:</p>\n<p>Se refiere a la capacidad de un componente para actualizar su estado y su vista de manera automática tanto cuando cambia el estado como cuando se produce un evento en la vista. En otras palabras, el <strong>Two-Way Binding</strong> significa que el flujo de datos es bidireccional, desde el estado hacia la vista y desde la vista hacia el estado. Para lograr esto se utilizan en conjunto con los eventos, como <strong>onChange</strong>, para capturar la información de los inputs y actualizar el estado, <em>React no proporciona un mecanismo nativo para two-way binding, pero se puede lograr utilizando librerías como react-forms o formik.</em></p>\n<p>Por ejemplo:</p>\n<pre><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">TwoWayBindingExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'midu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n        <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Enter your name<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> TwoWayBindingExample<span class=\"token punctuation\">;</span></code></pre>\n\n<p><em>En este ejemplo, el componente tiene un estado inicial llamado <strong>name</strong> con el valor <strong>midu</strong>. La función <strong>setName</strong> se utiliza para actualizar el estado <strong>name</strong> cuando se produce un evento <strong>onChange</strong> en el input, y se puede ver reflejado en el valor del input. Sin embargo, en este caso se está utilizando el atributo <strong>value</strong> para que el valor del input sea actualizado con el valor del estado, es decir, se está actualizando tanto el estado como el input.</em></p>\n<p><strong>Por si no quedó claro:</strong></p>\n<p>En términos sencillos, el <strong>Binding</strong> en React puede compararse con una cafetera y una taza de café. <strong>El estado</strong> del componente sería la <em>cafetera</em>, y <strong>la vista</strong> del componente sería <em>la taza de café</em>.</p>\n<p>En el caso del <strong>One-Way Binding</strong>, la cafetera solo puede verter café en una dirección, hacia la taza de café. Esto significa que la cafetera puede llenar automáticamente la taza de café con café fresco, pero la taza de café no puede devolver automáticamente el café a la cafetera. De esta manera, <strong>el estado</strong> del componente <em>(la cafetera)</em> puede actualizar automáticamente <strong>la vista</strong> <em>(la taza de café)</em> cuando cambia, pero la <strong>vista</strong> no puede actualizar automáticamente el <strong>estado</strong>.</p>\n<p>En el caso del <strong>Two-Way Binding</strong>, la cafetera puede verter y recibir café en ambas direcciones, hacia y desde la taza de café (no sé por qué alguien necesitaría hacer algo así). Esto significa que la cafetera puede llenar y vaciar automáticamente la taza de café con café fresco. De esta manera, tanto <strong>el estado</strong> del componente como <strong>la vista</strong> pueden actualizarse automáticamente entre sí.</p>\n<p>Sí quieres saber más comparto el siguiente enlace:<br><a href=\"https://www.telerik.com/blogs/how-to-bind-any-component-data-react-one-way-binding\">How To Bind Any Component to Data in React: One-Way Binding</a>  </p>\n"}
